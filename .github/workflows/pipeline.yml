name: Java CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]

env:
  MAVEN_OPTS: "-Dmaven.repo.local=$GITHUB_WORKSPACE/.m2/repository -Dmaven.install.skip=true"
  MAVEN_CLI_OPTS: "--batch-mode --no-transfer-progress"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, prod]
        include:
          - environment: dev
            profile: dev
            version_prefix: DEV-BUILD
          - environment: prod
            profile: prod
            version_prefix: PROD-BUILD
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
        cache-dependency-path: '**/pom.xml'
    
    - name: Build
      run: |
        VERSION="${{ matrix.version_prefix }}-${GITHUB_SHA::7}"
        if [[ "${{ matrix.environment }}" == "prod" && "${{ github.ref_type }}" == "tag" ]]; then
          VERSION="${{ github.ref_name }}"
        fi
        ./mvnw ${{ env.MAVEN_CLI_OPTS }} clean package -P${{ matrix.profile }} -DskipTests -Dversion=$VERSION
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-${{ matrix.environment }}
        path: target/*.jar
        retention-days: 5

  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
        cache-dependency-path: '**/pom.xml'
    
    - name: Run tests
      run: |
        ./mvnw ${{ env.MAVEN_CLI_OPTS }} test
        echo "Total Coverage $(cat target/site/jacoco/index.html | grep -o 'Total[^%]*%' | sed -n 's/.*Total.*>\(.*\)%/\1/p')%"
    
    - name: Publish Test Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          target/surefire-reports/TEST-*.xml
          target/site/jacoco/jacoco.xml
        retention-days: 5

  analyze:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        name: test-results
        path: test-results

    - name: Coverage Report
      id: coverage
      run: |
        ls -la
        ls -la test-results/
        COVERAGE=$(cat test-results/jacoco.xml | grep -oP 'covered="[^"]*"' | head -1 | cut -d'"' -f2)
        TOTAL=$(cat test-results/jacoco.xml | grep -oP 'missed="[^"]*"' | head -1 | cut -d'"' -f2)
        COVERAGE_PCT=$(awk "BEGIN {print ($COVERAGE/($COVERAGE+$TOTAL))*100}")
        echo "coverage=$COVERAGE_PCT" >> $GITHUB_OUTPUT
        
    - name: Create Coverage Comment
      uses: actions/github-script@v7
      with:
        script: |
          const coverage = Number(process.env.COVERAGE).toFixed(2);
          const emoji = coverage >= 80 ? '✅' : coverage >= 60 ? '⚠️' : '❌';
          
          const comment = `## Code Coverage Report ${emoji}\n\n` +
            `Total coverage: ${coverage}%\n\n` +
            `Target: 80%\n` +
            `Status: ${coverage >= 80 ? 'Passing' : 'Needs Improvement'}`;
            
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.name,
            body: comment
          })
      env:
        COVERAGE: ${{ steps.coverage.outputs.coverage }}
